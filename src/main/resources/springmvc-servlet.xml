<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"    
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
        http://www.springframework.org/schema/task 
        http://www.springframework.org/schema/task/spring-task-4.0.xsd
	    http://www.springframework.org/schema/aop
	    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!-- 扫描路径 -->
    <context:component-scan base-package="org.jzz.springDemo.controller" >
         <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
<!-- 	<aop:aspectj-autoproxy proxy-target-class="true"/> -->

	<!-- 注解映射器 -->  
<!--     <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>       -->
    <!-- 注解适配器 -->  
<!--     <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>       -->
      
    <!-- 使用mvc:annotation-driven代替上边注解映射器和注解适配器配置   
    	mvc:annotation-driven默认加载很多的参数绑定方法，  比如json转换解析器就默认加载了，如果使用mvc:annotation-driven就不用配置上边的  
    	RequestMappingHandlerMapping和RequestMappingHandlerAdapter  
   		 实际开发时使用mvc:annotation-driven-->  
    <!-- 激活基于注解的配置 @RequestMapping, @ExceptionHandler,数据绑定 ,@NumberFormat ,
    @DateTimeFormat ,@Controller ,@Valid ,@RequestBody ,@ResponseBody等  -->
    <mvc:annotation-driven />
    
    <mvc:interceptors>  
	    <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->  
	    <mvc:interceptor>
	    	<!-- 拦截路径不用包含项目名称 -->
	    	<mvc:mapping path="/action/threadLocal"/>
	    	<bean class="org.jzz.springDemo.filter.MyFilter"/>
	    </mvc:interceptor>
	</mvc:interceptors> 
    
        <!-- 配置根视图 -->
    <mvc:view-controller path="/" view-name="index"/>

    <!-- 静态资源配置 -->
<!--     <mvc:default-servlet-handler default-servlet-name="default" /> -->
    <mvc:resources location="/js/" mapping="/js/**"></mvc:resources>

    <!-- 视图层配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

</beans>